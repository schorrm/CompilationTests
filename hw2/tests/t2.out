33: Type -> BOOL
5: RetType -> Type
31: Type -> INT
11: FormalDecl -> Type ID
31: Type -> INT
11: FormalDecl -> Type ID
9: FormalsList -> FormalDecl
10: FormalsList -> FormalDecl COMMA FormalsList
8: Formals -> FormalsList
36: Exp -> ID
36: Exp -> ID
46: Exp -> Exp RELOP Exp
20: Statement -> RETURN Exp SC
12: Statements -> Statement
4: FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
31: Type -> INT
5: RetType -> Type
7: Formals -> epsilon
31: Type -> INT
38: Exp -> NUM
16: Statement -> Type ID ASSIGN Exp SC
12: Statements -> Statement
41: Exp -> TRUE
36: Exp -> ID
38: Exp -> NUM
46: Exp -> Exp RELOP Exp
25: Statement -> BREAK SC
21: Statement -> IF LPAREN Exp RPAREN Statement
12: Statements -> Statement
36: Exp -> ID
38: Exp -> NUM
35: Exp -> Exp BINOP Exp
17: Statement -> ID ASSIGN Exp SC
13: Statements -> Statements Statement
14: Statement -> LBRACE Statements RBRACE
38: Exp -> NUM
20: Statement -> RETURN Exp SC
24: Statement -> WHILE LPAREN Exp RPAREN Statement ELSE Statement
13: Statements -> Statements Statement
38: Exp -> NUM
20: Statement -> RETURN Exp SC
13: Statements -> Statements Statement
4: FuncDecl -> RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE
6: RetType ->  VOID
7: Formals -> epsilon
33: Type -> BOOL
41: Exp -> TRUE
16: Statement -> Type ID ASSIGN Exp SC
12: Statements -> Statement
36: Exp -> ID
43: Exp -> NOT Exp
31: Type -> INT
28: Call -> ID LPAREN RPAREN
37: Exp -> Call
16: Statement -> Type ID ASSIGN Exp SC
12: Statements -> Statement
36: Exp -> ID
29: ExpList -> Exp
27: Call -> ID LPAREN ExpList RPAREN
18: Statement -> Call SC
13: Statements -> Statements Statement
14: Statement -> LBRACE Statements RBRACE
line 24: syntax error
